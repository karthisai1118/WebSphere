---
#
# Check syntax of file /etc/rc.was.config.
# Check number of entries for 2nd field userid in /etc/rc.was.config against number of java processes for same userid.
#
# Create log directory for logs of standard output, error messages
- name: Create {{ log_dir }}/was for logs of standard output, error messages
  file:
    path: "{{ log_dir }}/was"
    state: directory
    mode: '0755'
      #become: true
      #become_user: root

- name: Copy script was_syntax_processes_check.sh to temporary directory
  copy:
    src: files/was_syntax_processes_check.sh
    dest: "{{ wasadm_home }}/"
    mode: '0777'

- name: Check syntax of /etc/rc.was.config and number of entries for 2nd field userid in /etc/rc.was.config against number of java processes for same userid
  shell: su - wasadm -c "{{ wasadm_home }}/was_syntax_processes_check.sh > {{ log_dir }}/was/was_syntax_processes_check.out 2>&1"
  register: script
  ignore_errors: True
  changed_when: script.rc == 0
    #become: true
    #become_user: root

- name: Permit access to read log files in {{ log_dir }}/was
  command: chmod -R 777 {{ log_dir }}/was
  args:
    warn: false
  changed_when: false
    #become: true
    #become_user: root

- name: 'Store content of {{ log_dir }}/was/was_syntax_processes_check.out in variable output when script was_syntax_processes_check.sh fails'
  command: cat {{ log_dir }}/was/was_syntax_processes_check.out
  register: output
  when: script.rc != 0

- name: 'Output of {{ log_dir }}/was/was_syntax_processes_check.out when script was_syntax_processes_check.sh fails'
  debug:
    var: output.stdout_lines
  failed_when: script.rc != 0
  when: script.rc != 0

# Delete script
- name: "Delete file {{ wasadm_home }}/was_syntax_processes_check.sh"
  file:
    path: "{{ wasadm_home }}/was_syntax_processes_check.sh"
    state: absent
      #become: true
      #become_user: root
